{"version":3,"sources":["components/LoadingComponent.js","components/HomeComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","shared/baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/orders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","react_default","a","createElement","className","RenderCard","_ref","item","isLoading","errMess","LoadingComponent_Loading","reactstrap_es","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","onClick","es","to","concat","id","width","height","Menu","menu","dishes","map","key","active","maxLength","len","val","length","minLength","required","isNumber","isNaN","Number","RenderDish","top","RenderOrder","_ref2","postOrder","dishId","DishdetailComponent_OrderForm","OrderForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleModal","bind","assertThisInitialized","handleOrderSubmit","state","isModalOpen","isNavOpen","setState","values","size","ordernumber","details","author","location","contacttype","phonenumber","_this2","outline","isOpen","toggle","lib","onSubmit","htmlFor","md","select","model","selected","textarea","rows","text","placeholder","validators","show","messages","type","color","Component","RenderComments","_ref3","comments","postComment","comment","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishdetailComponent_CommentForm","CommentForm","_this3","handleSubmit","rating","_this4","DishDetail","validEmail","test","Contact","console","log","JSON","stringify","alert","href","role","offset","check","checkbox","checked","agree","onChange","handleInputChange","About","RenderLeader","tag","left","middle","object","body","leaders","title","list","Header","toggleNav","handleLogin","event","preventDefault","dark","expand","navbar","innerRef","input","username","password","remember","value","Footer","baseUrl","addDishes","payload","addComments","promosLoading","addPromos","promos","leadersLoading","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","HeaderComponent","path","component","HomeComponent","filter","featured","promotions","promo","exact","MenuComponent","match","DishdetailComponent","parseInt","params","commentsErrMess","AboutComponent","FooterComponent","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","Content-Type","credentials","then","response","ok","Error","status","statusText","error","message","json","catch","newOrder","resetFeedbackForm","actions","reset","Dishes","arguments","undefined","action","objectSpread","Comments","Promotions","Leaders","Orders","orders","order","InitialFeedback","firstname","lastname","telnum","email","contactType","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","react_redux_es","MainComponent","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5072e5fa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle,CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\n// import { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n            if (isLoading) {\r\n                return(\r\n                        <Loading />\r\n                );\r\n            }\r\n            else if (errMess) {\r\n                return(\r\n                        <h4>{errMess}</h4>\r\n                );\r\n            }\r\n            else     \r\n                return(\r\n                        <Card>\r\n                            <CardImg src={ item.image} alt={item.name}/>\r\n                            <CardBody>\r\n                                <CardTitle>{item.name}</CardTitle>\r\n                                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                                <CardText>{item.description}</CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    );\r\n                }\r\n\r\n\r\nfunction Home(props){\r\n    return(\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                                isLoading={props.dishesLoading} \r\n                                errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.promotion} \r\n                            isLoading={props.promoLoading} \r\n                            errMess={props.promoErrMess} \r\n                            />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} \r\n                    isLoading={props.leaderLoading} \r\n                    errMess={props.leaderErrMess} \r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\n// import { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({dish, onClick}) {    \r\n                return (\r\n                    <Card >                       \r\n                        <Link to={`/menu/${dish.id}`}>        \r\n                        <CardTitle>{dish.name}</CardTitle> \r\n                            <CardImg width=\"50%\" height=\"50%\" src={dish.image} alt={dish.name}/>                   \r\n                            </Link>     \r\n                        </Card>                                                            \r\n                        );\r\n            }\r\n\r\nconst Menu = (props) => {\r\n    const menu  = props.dishes.dishes.map((dish) => {        \r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\" key={dish.id} >\r\n                <RenderMenuItem dish={dish}/>\r\n            </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n                else if (props.dishes.errMess) {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row\"> \r\n                                <div className=\"col-12\">\r\n                                    <h4>{props.dishes.errMess}</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n                else\r\n\r\n            return (\r\n                <div className = \"container\" >\r\n                    <div className=\"row\">    \r\n                        <Breadcrumb>\r\n                                <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                    \r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">                                     \r\n                        {menu}                    \r\n                    </div>\r\n                </div>\r\n            );\r\n    }                 \r\n        \r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n     CardTitle, Breadcrumb, BreadcrumbItem,  \r\n     Button, Modal, ModalHeader, ModalBody, Label, Col, Row  } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\n// import { baseUrl } from '../shared/baseUrl';\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst required = (val) => val && val.length;\r\n\r\nconst isNumber = (val) => !isNaN(Number(val));\r\n  \r\nfunction RenderDish ({dish}) {            \r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg top src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    function RenderOrder ({dish,dishId, postOrder}) {            \r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>               \r\n                <CardBody>\r\n                <OrderForm dishId={dish.id}\r\n                             dish={dish} \r\n                            postOrder={postOrder} \r\n                              />\r\n                </CardBody>\r\n            </Card>\r\n            </div>\r\n        );\r\n}\r\nclass OrderForm extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n   \r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleOrderSubmit= this.handleOrderSubmit.bind(this);\r\n\r\n        this.state = {\r\n            isModalOpen: false,\r\n            isNavOpen:false\r\n        };\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleOrderSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postOrder(this.props.dishId, values.size, values.ordernumber, values.details, values.author, values.location, values.contacttype, values.phonenumber)    \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}> Place an Order</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                <ModalBody> \r\n                    <LocalForm onSubmit={(values) => this.handleOrderSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                            <Col>\r\n                            <h6>Kindly fill and submit the details of your order <br/> and we will call back to confirm </h6>\r\n                            <p>Ready to place your {this.props.dish.name} order?</p>\r\n                            </Col>\r\n                    </Row>\r\n                        \r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                                <Label htmlFor=\"size\" md={5}>Size of meal</Label>\r\n                                <Control.select model=\".size\"\r\n                                                name=\"size\"\r\n                                                className=\"form-control\">                  \r\n                                                <option >Kiddie size</option>\r\n                                                <option >Small</option>\r\n                                                <option selected>Medium</option>\r\n                                                <option>Large</option>                            \r\n                                </Control.select>  \r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                            <Label htmlFor=\"ordernumber\" md={5}>Number of meals</Label>\r\n                            <Control.select model=\".ordernumber\"\r\n                                            name=\"ordernumber\"\r\n                                            className=\"form-control\">                  \r\n                                            <option selected >1</option>\r\n                                            <option >2</option>\r\n                                            <option>3</option>\r\n                                            <option>4</option>\r\n                                            <option>5</option>\r\n                            </Control.select>  \r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"details\" md={5}>Further details</Label>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={10}>\r\n                                        <Control.textarea model=\".details\" id=\"details\" name=\"details\"\r\n                                            rows=\"2\"\r\n                                            className=\"form-control\" />                                      \r\n                                    </Col>\r\n                                </Row>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={5}>Your Name</Label>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                        />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                        </Row>                               \r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"location\" md={5}>Your Location</Label>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".location\" id=\"location\" name=\"location\"\r\n                                        placeholder=\"Location within Accra\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                        />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                        </Row> \r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                            <Label htmlFor=\"contacttype\" md={5}>how may we contact you</Label>\r\n                            <Control.select model=\".contacttype\"\r\n                                            name=\"contacttype\"\r\n                                            className=\"form-control\">                  \r\n                                            <option selected >Mobile</option>\r\n                                            <option >Whatsapp</option>\r\n                                            \r\n                            </Control.select>  \r\n                            </Col>\r\n                        </Row>\r\n                            <Row>\r\n                            <Col md={6}>\r\n                                    <Control.text model=\".phonenumber\" id=\"phonenumber\" name=\"phonenumber\"\r\n                                        placeholder=\"phonenumber\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(10), maxLength: maxLength(15),isNumber\r\n                                        }}\r\n                                        />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".phonenumber\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 10 characters',\r\n                                            maxLength: 'Must be 15 characters or less',\r\n                                            isNumber: 'Must be a number'\r\n\r\n                                        }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size: 10}}>\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                    </LocalForm>\r\n                            \r\n                </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n    function RenderComments({comments,postComment, dishId}) {\r\n        if (comments != null)\r\n            return(\r\n                <div className=\"col-12 col-md-5 \">\r\n                    <h4>Comments from our customers</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                    {comments.map((comment) => {\r\n                        return (\r\n                            <li key ={comment.id}>\r\n                            <p>{comment.comment}</p>\r\n                            <p>--{comment.author} , {new Intl.DateTimeFormat('en-US',\r\n                                { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} \r\n                                postComment={postComment} \r\n                                />\r\n                </div>\r\n            );\r\n        else \r\n            return(\r\n                <div></div>\r\n            )\r\n    }\r\n\r\n    class CommentForm extends Component{\r\n\r\n        constructor(props) {\r\n            super(props);\r\n       \r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.handleSubmit= this.handleSubmit.bind(this);\r\n\r\n            this.state = {\r\n                isModalOpen: false,\r\n                isNavOpen:false\r\n            };\r\n        }\r\n\r\n        toggleModal() {\r\n            this.setState({\r\n              isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n\r\n        handleSubmit(values) {\r\n            this.toggleModal();\r\n            this.props.postComment(this.props.dishId, values.rating, values.author, values.comment)    \r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <div>\r\n                    <Button outline onClick={this.toggleModal}> Submit Comment</Button>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody> \r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                <Label htmlFor=\"rating\" md={5}>Rating</Label>\r\n                                <Control.select model=\".rating\"\r\n                                                name=\"rating\"\r\n                                                className=\"form-control\">                  \r\n                                                <option >1</option>\r\n                                                <option selected>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n                                </Control.select>  \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"author\" md={5}>Your Name</Label>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                            <Col md={10}>\r\n                                                <Control.text model=\".author\" id=\"name\" name=\"name\"\r\n                                                    placeholder=\"Your Name\"\r\n                                                    className=\"form-control\"\r\n                                                    validators={{\r\n                                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                    }}\r\n                                                    />\r\n                                                <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".author\"\r\n                                                    show=\"touched\"\r\n                                                    messages={{\r\n                                                        required: 'Required',\r\n                                                        minLength: 'Must be greater than 2 characters',\r\n                                                        maxLength: 'Must be 15 characters or less'\r\n                                                    }}\r\n                                                />\r\n                                            </Col>\r\n                                    </Row> \r\n                                    <Row className=\"form-group\">\r\n                                            <Label htmlFor=\"message\" md={5}>Your Feedback</Label>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col md={10}>\r\n                                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                                rows=\"6\"\r\n                                                className=\"form-control\" />                                      \r\n                                        </Col>\r\n                                    </Row>\r\n        \r\n                                    <Row className=\"form-group\">\r\n                                        <Col md={{size: 10}}>\r\n                                            <Button type=\"submit\" color=\"primary\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                        </LocalForm>\r\n                                \r\n                    </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }\r\n\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div> \r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderOrder dishId={props.dish.id}\r\n                                postOrder={props.postOrder}\r\n                                dish={props.dish}/>          \r\n                    \r\n                </div>         \r\n                <div className=\"row\">                    \r\n                    <RenderComments comments={props.comments} \r\n                                    postComment={props.postComment}\r\n                                    dishId={props.dish.id}  />\r\n                </div>       \r\n            </div>\r\n\r\n        );\r\n    else\r\n        return(\r\n            <div></div>\r\n        )\r\n}\r\n\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button,  Label,  Col, Row  } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, LocalForm, Errors, } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit= this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        // this.props.resetFeedbackForm();\r\n     }    \r\n    \r\n    render() { \r\n        return(\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"row\">    \r\n                                    <Breadcrumb>\r\n                                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                                    </Breadcrumb>\r\n                                \r\n                                    <div className=\"col-12\">\r\n                                        <h3>Contact Us</h3>\r\n                                        <hr />\r\n                                    </div>\r\n                    </div>\r\n                    <div className=\"row row-content\">\r\n                        <div className=\"col-12\">\r\n                            <h3>Location Information</h3>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Asofan Market Road<br />\r\n                            Ofankor, Accra<br />\r\n                            GHANA<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +233 248 121 510<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: : +233 248 121 510<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                                delriofoodlounge@food.net</a> </address>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                            <h5>Map of our Location</h5>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                            <div className=\"btn-group\" role=\"group\">\r\n                                <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                                <a role=\"button\" className=\"btn btn-info\" href=\"tel:+85212345678\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                                <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row row-content\">\r\n                        <div className=\"col-12\">\r\n                            <h3>Send us your Feedback</h3>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-9\">\r\n                            <LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                            placeholder=\"Last Name\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                            }}\r\n                                            />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".lastname\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers. ',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size: 6, offset: 2}}>\r\n                                        <div className=\"form-check\">\r\n                                            <Label check>\r\n                                                <Control.checkbox model=\".agree\"  name=\"agree\"\r\n                                                    className=\"form-check\"\r\n                                                    checked={this.props.agree}\r\n                                                    onChange={this.handleInputChange} /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                            </Label>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col md={{size: 3, offset: 1}}>\r\n                                        <Control.select model=\".contactType\"\r\n                                            name=\"contactType\"\r\n                                            className=\"form-control\">                                            \r\n                                                \r\n                                            <option>Tel.</option>\r\n                                            <option>Email</option>\r\n                                        </Control.select>                                        \r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                            rows=\"12\"\r\n                                            className=\"form-control\" />                                      \r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size: 10, offset: 2}}>\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                            Send Feedback\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </LocalForm>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n            )\r\n        }\r\n    }\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction About(props) {\r\n\r\n   \r\n    function  RenderLeader({leader}) {\r\n        return (\r\n            <div key={leader.id} className= \"row row-content\">\r\n                {/* <div className=\"col-12 col-md-2\"> */}\r\n                <Media tag=\"li\">\r\n                        <Media left middle>\r\n                            <Media object src={leader.image} alt={leader.name}/>\r\n                        </Media>\r\n                {/* </div> */}\r\n                {/* <div className=\"col-12 col-md-10 mt-1\"> */}\r\n                        <Media body className=\"ml-5\">\r\n                            <h4> {leader.name}</h4>\r\n                            <p>{leader.designation}</p>\r\n                            <p>{leader.description}</p>                \r\n                        </Media>\r\n                    </Media>\r\n                {/* </div> */}\r\n            </div>\r\n            \r\n        );\r\n    }\r\n const leaders = props.leaders.leaders.map((leader) => {\r\n        return (  <RenderLeader leader = {leader} />);\r\n    });\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\nimport {Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport {NavLink } from 'react-router-dom';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n        this.state = {\r\n            isNavOpen:false,\r\n            isModalOpen: false\r\n        };\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n            this.setState({\r\n                isModalOpen: !this.state.isModalOpen\r\n            });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        // this.props.loginUser({username: this.username.value, password: this.password.value});\r\n        event.preventDefault();\r\n    }\r\n    render(){\r\n        return(\r\n            <div>                \r\n                 <Navbar dark  color=\"primary\" expand=\"md\">\r\n                        <div className = \"container\">\r\n                            <NavbarToggler onClick={this.toggleNav} />\r\n\r\n                            <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                                < img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"  alt= \"Del Rio Food Court\"/>\r\n                            </NavbarBrand>\r\n                            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                                <Nav navbar>\r\n                                    <NavItem>\r\n                                        <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/favorites\"><span className=\"fa fa-heart fa-lg\"></span> My Favorites</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                    </NavItem>\r\n                                </Nav>\r\n                                <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    {/* { !this.props.auth.isAuthenticated ? */}\r\n                                        <Button outline onClick={this.toggleModal}>\r\n                                            <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                            {/* {this.props.auth.isFetching ?\r\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                                : null\r\n                                            } */}\r\n                                        </Button>\r\n                                        {/* :\r\n                                        <div>\r\n                                        <div className=\"navbar-text mr-3\">{this.props.auth.user.username}</div>\r\n                                        <Button outline onClick={this.handleLogout}>\r\n                                            <span className=\"fa fa-sign-out fa-lg\"></span> Logout\r\n                                            {this.props.auth.isFetching ?\r\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                                : null\r\n                                            }\r\n                                        </Button>\r\n                                        </div>\r\n                                    } */}\r\n\r\n                                </NavItem>\r\n                            </Nav>\r\n                            </Collapse>\r\n                        \r\n\r\n                        </div>\r\n                    </Navbar>\r\n                    <Jumbotron>\r\n                        <div className=\"container\">\r\n                            <div className= \"row row-header\">\r\n                                <div className=\"col-12 col-sm-6\">\r\n                                    <h1>Del Rio </h1>\r\n                                    <p>We take inspiration from the World's best cuisines, \r\n                                        and create a unique fusion experience. Our lipsmacking\r\n                                        creations will tickle your culinary senses!</p>                            \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Jumbotron>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                        <ModalBody>\r\n                            <Form onSubmit={this.handleLogin}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"username\">Username</Label>\r\n                                    <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                        innerRef={(input) => this.username = input} />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"password\">Password</Label>\r\n                                    <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                        innerRef={(input) => this.password = input}  />\r\n                                </FormGroup>\r\n                                <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input}  />\r\n                                        Remember me\r\n                                    </Label>\r\n                                </FormGroup>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                            </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n            </div>\r\n        )}\r\n    \r\n    }\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                     <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Asofan Market Road<br />\r\n                            Ofankor, Accra<br />\r\n                            GHANA<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +233 248 121 510<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: : +233 248 121 510<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                                delriofoodlounge@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","export const baseUrl = 'http://localhost:3001/';","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n// export const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const addComment = ( comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = { \r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\", \r\n        body:JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n        credentials:\"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok){\r\n            return response;            \r\n        } else {\r\n            var error = new Error ('Error' + response.status + ': ' + response.statusText);\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted \\nError: ' + error.message); });\r\n};\r\n\r\nexport const addOrder = ( order) => ({\r\n    type: ActionTypes.ADD_ORDER,\r\n    payload: order\r\n});\r\n\r\nexport const postOrder = (dishId, size, ordernumber,details, author, location, contacttype, phonenumber) =>(dispatch) => {\r\n    const newOrder = {       \r\n        dishId: dishId,\r\n        size: size,\r\n        ordernumber: ordernumber,\r\n        details: details,\r\n        author: author,\r\n        location:location,\r\n        contacttype:contacttype,\r\n        phonenumber: phonenumber,\r\n    };\r\n    newOrder.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'orders', {\r\n        method: \"POST\", \r\n        body:JSON.stringify(newOrder),\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n        credentials:\"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok){\r\n            return response;            \r\n        } else {\r\n            var error = new Error ('Error' + response.status + ': ' + response.statusText);\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addOrder(response)))\r\n    .catch(error => { console.log('post order', error.message); alert('Your order could not be posted \\nError: ' + error.message); });\r\n};\r\n\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)));\r\n}\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)));\r\n};\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {    \r\n    dispatch(promosLoading(true));\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)));\r\n}\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)));\r\n}\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_ORDER = 'ADD_ORDER';\r\n\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { postOrder,postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\n// import { DISHES } from '../shared/dishes';\r\n// import { COMMENTS } from '../shared/comments';\r\n// import { PROMOTIONS } from '../shared/promotions';\r\n// import { LEADERS } from '../shared/leaders';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({  \r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postOrder:(dishId, size, ordernumber,details, author, location, contacttype, phonenumber) => dispatch(postOrder(dishId, size, ordernumber,details, author, location, contacttype, phonenumber)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => {dispatch(fetchComments())},\r\n  fetchPromos: () => {dispatch(fetchPromos())},\r\n  fetchLeaders:() => {dispatch(fetchLeaders())},\r\n}); \r\n\r\n\r\nclass Main extends Component {\r\n\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n  \r\n  render() {\r\n    const HomePage= () => {\r\n      return(\r\n        <Home \r\n        dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n        dishesLoading={this.props.dishes.isLoading}\r\n        dishesErrMess={this.props.dishes.errMess}\r\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n        promoLoading={this.props.promotions.isLoading}\r\n        promoErrMess={this.props.promotions.errMess}        \r\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n        leaderLoading={this.props.leaders.isLoading}\r\n        leaderErrMess={this.props.leaders.errMess}      \r\n        />\r\n      );\r\n    }\r\n      \r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish = {this.props.dishes.dishes.filter((dish) =>dish.id === parseInt(match.params.dishId,10))[0]} \r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments = {this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                    postOrder={this.props.postOrder}\r\n                    // dishId={dish.id}\r\n                    />\r\n                    );\r\n    };\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/home\" component={HomePage} />            \r\n            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes}/> } />\r\n            <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n            <Route path=\"/aboutus\" component={() => <About leaders={this.props.leaders}/> } />\r\n            <Route path='/contactus' component={Contact} /> \r\n            <Redirect to=\"/home\" />\r\n          </Switch>\r\n          </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps , mapDispatchToProps)(Main));\r\n","// import { DISHES } from '../shared/dishes';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n                                   errMess: null,\r\n                                    dishes:[]},                                                                        \r\n                                    action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false,\r\n                                errMess: null,\r\n                                 dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true,\r\n                                errMess: null, \r\n                                dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false,\r\n                                errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {errMess: null,comments: [] },action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            comment.id = state.comments.length;\r\n            comment.date = new Date().toISOString();\r\n            return {...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  =   { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, \r\n                                        action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, \r\n                isLoading: false, \r\n                errMess: null, \r\n                promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state,\r\n                 isLoading: true,\r\n                 errMess: null, \r\n                 promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state,\r\n                 isLoading: false,\r\n                 errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n// import { LEADERS } from '../shared/leaders';\r\n\r\nexport const Leaders = (state = { isLoading: true,\r\n                                  errMess: null,\r\n                                   leaders:[]}, \r\n                                    \r\n                                    action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, \r\n                            errMess: null,  \r\n                            leaders: action.payload};\r\n\r\n    case ActionTypes.LEADERS_LOADING:\r\n        return {...state, isLoading: true,\r\n                            errMess: null, \r\n                            leaders: []};\r\n\r\n    case ActionTypes.LEADERS_FAILED:\r\n        return {...state, isLoading: false, \r\n                            errMess: action.payload};\r\n        default:\r\n          return state;\r\n      }\r\n};","// import { ORDERS } from '../shared/orders';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Orders = (state = {errMess: null,orders:[]}\r\n    , action) => {\r\n    switch (action.type) {\r\n        \r\n        case ActionTypes.ADD_ORDER:\r\n        var order = action.payload;\r\n        // order.id = state.orders.length;\r\n        // order.date = new Date().toISOString();\r\n        return { ...state, \r\n                orders: state.orders.concat(order)};\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType:'Tel.',\r\n    message: ''\r\n}","import React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider} from 'react-redux';\r\nimport { ConfigureStore} from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n    \r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n      <BrowserRouter>\r\n        <div className=\"App\">             \r\n          <Main />             \r\n        </div>\r\n      </BrowserRouter>\r\n      </Provider>  \r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware} from 'redux';\r\n// import {Reducer, initialState} from './reducer';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { Orders } from './orders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes, \r\n            comments: Comments, \r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            orders: Orders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger));\r\n    return store;\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; \r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport './App.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}